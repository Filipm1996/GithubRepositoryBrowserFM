plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id("com.apollographql.apollo3").version("3.7.3")
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.githubrepositorybrowserfm"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def githubOauthKey = properties.getProperty("githubOauthKey")
        buildConfigField("String", "GITHUB_OAUTH_KEY", "\"$githubOauthKey\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.2"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

apollo {
    service("service"){
        generateKotlinModels.set(true)
        packageNamesFromFilePaths()

        introspection {
            endpointUrl.set("https://api.github.com/graphql")
            schemaFile.set(file("graphql/com/example/apollographql/schema.docs.graphql"))
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            def githubOauthKey = properties.getProperty("githubOauthKey")
            headers.put("Authorization", "Bearer $githubOauthKey")
        }
    }
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.7.20"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    //JetpackCompose
    implementation 'com.google.android.material:material:1.6.1'
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.6.0-alpha02"
    implementation 'androidx.compose.ui:ui:1.2.1'
    implementation 'androidx.compose.ui:ui-tooling:1.2.1'
    implementation 'androidx.compose.foundation:foundation:1.2.1'
    implementation "androidx.compose.material3:material3:1.0.0-rc01"
    implementation "androidx.compose.material3:material3-window-size-class:1.0.0-rc01"
    implementation 'androidx.activity:activity-compose:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'androidx.compose.runtime:runtime-livedata:1.2.1'
    implementation 'androidx.compose.runtime:runtime-rxjava2:1.2.1'
    debugImplementation "androidx.compose.ui:ui-tooling:1.2.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.2.1"

    //Apollo Kotlin
    implementation("com.apollographql.apollo3:apollo-runtime:3.7.3")

    //dagger hilt
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-compiler:2.45'

    //Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    //swipe to refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.25.1"

    //Paging3
    implementation "androidx.paging:paging-runtime:3.1.1"
}